;;; package --- Summary:
;;; Commentary:
;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
;;; Code:

;; install and update stable package archives from MELPA
(require 'package)
(add-to-list 'package-archives
             '("MELPA" . "https://melpa.org/packages/") t)

;; initialize package.el
(package-initialize)

;; Path definition for themes and packages will be installed
(let ((default-directory  "~/.emacs.d/lisp/"))
  (setq load-path
        (append
         (let ((load-path  (copy-sequence load-path))) ;; Shadow
           (normal-top-level-add-subdirs-to-load-path))
         load-path)))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(company-clang-arguments
   (quote
    ("-std=c++11" "-I/usr/lib64/clang/6.0.1/include/" "-I/usr/include/")))
 '(custom-enabled-themes (quote (solarized)))
 '(custom-safe-themes
   (quote
    ("84d2f9eeb3f82d619ca4bfffe5f157282f4779732f48a5ac1484d94d5ff5b279" "107420ec61832543bd769e5d6764bedb41ec3d2f8cd4d53a407f7aa74b493dac" "2b8dff32b9018d88e24044eb60d8f3829bd6bbeab754e70799b78593af1c3aba" "003a9aa9e4acb50001a006cfde61a6c3012d373c4763b48ceb9d523ceba66829" "3c83b3676d796422704082049fc38b6966bcad960f896669dfc21a7a37a748fa" "8db4b03b9ae654d4a57804286eb3e332725c84d7cdab38463cb6b97d5762ad26" default)))
 '(flycheck-clang-include-path (quote ("/usr/lib64/clang/6.0.1/include/" "/usr/include/")))
 '(flycheck-display-errors-function (quote flycheck-display-error-messages-unless-error-list))
 '(flycheck-gcc-include-path nil)
 '(flymake-cppcheck-command "/usr/bin/cppcheck")
 '(flymake-cppcheck-enable "all")
 '(package-selected-packages
   (quote
    (comment-dwim-2 company-c-headers company-irony company-irony-c-headers flycheck-irony helm-gtags helm-projectile helm-swoop iedit irony flymake-cppcheck multiple-cursors irony-eldoc cmake-ide cmake-mode cmake-project company-rtags helm-rtags projectile projectile-git-autofetch srefactor use-package eldoc-eval all-the-icons async dash epl flymake-easy flyspell-correct ivy memoize pkg-info popup powerline rich-minority s helm helm-core rtags airline-themes spaceline spaceline-all-the-icons smart-mode-line smart-mode-line-powerline-theme flycheck flycheck-popup-tip flycheck-pycheckers flycheck-rtags flycheck-tip flymake-shell flyspell-correct-helm flyspell-correct-ivy flyspell-correct-popup flyspell-lazy flyspell-popup which-key yasnippet yasnippet-classic-snippets company)))
 '(safe-local-variable-values
   (quote
    ((/usr/lib64/clang/6\.0\.1/include/)
     (flycheck-gcc-language-standard . c++11)))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; initialize solarized theme and set as default
(require 'color-theme)
(require 'color-theme-solarized)
(load-theme 'solarized t)

;; initialize highlight indentation mode
(require 'highlight-indentation)
(add-hook 'after-init-hook 'highlight-indentation-current-column-mode)

;; set default modes initially
(add-hook 'after-init-hook 'which-key-mode)
(add-hook 'after-init-hook 'yas-global-mode)
(add-hook 'after-init-hook 'column-number-mode)
(add-hook 'after-init-hook 'global-hl-line-mode)
;;(add-hook 'after-init-hook 'global-company-mode)
(add-hook 'after-init-hook 'display-battery-mode)
(add-hook 'after-init-hook 'global-display-line-numbers-mode)

;; highlight the current indentation with column mode
(add-hook 'prog-mode-hook 'highlight-indentation-current-column-mode)


;;Flycheck mode on
;;(add-hook 'prog-mode-hook 'flycheck-mode)

;; (setf company-backends '())
;; (add-to-list 'company-backends 'company-keywords)
;; (add-to-list 'company-backends 'company-irony)
;; (add-to-list 'company-backends 'company-irony-c-headers)

;; (require 'company-irony-c-headers)

;; (add-hook 'c++-mode-hook 'irony-mode 1)
;; (add-hook 'c-mode-hook 'irony-mode-on)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Flycheck
;;;;;;;; Description: code linting (particularly C/C++ for me)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; (require 'cc-mode)
;; (add-hook 'c++-mode-hook 'flycheck-mode)
;; (add-hook 'c-mode-hook 'flycheck-mode)
;; Check buffer on save, new line and immediately after anbling flycheck-mode
;; (setq flycheck-check-syntax-automatically '(mode-enabled save))
;; Add include paths
;; (add-hook 'c++-mode-hook
;;           (lambda () (setq flycheck-clang-include-path
;;                            (list (expand-file-name "/usr/lib64/clang/6.0.1/include")))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; company-mode
;;;;;;;; Description: text completion framework
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; (require 'company)
;; Use company-mode in all buffers
;; (add-hook 'after-init-hook 'global-company-mode)
;; Use company-mode with Clang
;; (setq company-backends (delete 'company-semantic company-backends))
;; (set 'company-clang-arguments (list "-std=c++11")) ;; enable C++11 code completion

;; company
(add-hook 'after-init-hook 'global-company-mode)
(global-set-key [(meta ??)] 'company-complete-common)

;; flycheck
(add-hook 'after-init-hook #'global-flycheck-mode)

;; display line numbers initally
(display-line-numbers-mode 1)

;; highlight curent line
(hl-line-mode 1)

;; auto close bracket insertion. New in emacs 24
(show-paren-mode 1)
(setq show-paren-delay 0)

;; powerline package for mode-line
(setq sml/theme 'dark)
(smart-mode-line-enable 1)

;; definition for killing all other buffers except current
(defun kill-other-buffers ()
      "Kill all other buffers."
      (interactive)
      (mapc 'kill-buffer (delq (current-buffer) (buffer-list))))

;; set default keyboard sortcut for kill-other-buffers() function
(global-set-key (kbd "C-x C-b") 'kill-other-buffers)

;; Modeline settings
;; Show 24-hour time and date on status bar
(setq display-time-24hr-format t)
(setq display-time-day-and-date t)
(display-time)

;; default coding
(prefer-coding-system 'utf-8)

(add-hook 'flycheck-mode-hook 'flycheck-irony-setup)
(add-hook 'irony-mode-hook 'irony-eldoc)

(defun flycheck ()
  "Configurate flycheck."
  (add-to-list 'display-buffer-alist
	       `(,(rx bos "*Flycheck errors*" eos)
		 (display-buffer-reuse-window
		  display-buffer-in-side-window)
		 (side            . bottom)
		 (reusable-frames . visible)
		 (window-height   . 0.23)))
  (setq flycheck-display-errors-function
	'flycheck-display-error-messages-unless-error-list))

(add-hook 'prog-mode-hook 'flycheck)

;; add clang include path to flycheck
(add-hook 'c++-mode-hook
          (lambda () (setq flycheck-clang-include-path
                           (list (expand-file-name "/usr/lib64/clang/6.0.1/include/")))))

;; flymake cppcheck initialization
(require 'flymake-cppcheck)
(add-hook 'c-mode-hook 'flymake-cppcheck-load)
(add-hook 'c++-mode-hook 'flymake-cppcheck-load)

;; flymake-cppcheck options
;; '(flymake-cppcheck-enable "warning,performance,information,style")

;; set global key bind for jump to other file from a source file
(global-set-key (kbd "C-x C-h") 'ff-find-other-file)

;; set globalkey binding to iedit
(global-set-key (kbd "C-c ;") 'iedit-mode)

;; define function that move-line-up
(defun move-line-up ()
  "Move up the current line."
  (interactive)
  (transpose-lines 1)
  (forward-line -2)
  (indent-according-to-mode))

;; define function that move-line-down
(defun move-line-down ()
  "Move down the current line."
  (interactive)
  (forward-line 1)
  (transpose-lines 1)
  (forward-line -1)
  (indent-according-to-mode))

;; set global key bindings for move-line up & down functions
(global-set-key [(control shift up)]  'move-line-up)
(global-set-key [(control shift down)]  'move-line-down)

;; set global key bindings for comment line
(global-set-key (kbd "C-x /") 'comment-line)

(provide 'init.el)
;;; init.el ends here


