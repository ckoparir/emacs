;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("stdio.h" include (:system-flag t) nil [1 19])
            ("stdlib.h" include (:system-flag t) nil [20 39])
            ("TRUE" variable (:constant-flag t) nil [50 54])
            ("FALSE" variable (:constant-flag t) nil [66 71])
            ("DATA" type
               (:typedef ("int")
                :type "typedef")
                nil [76 93])
            ("BOOL" type
               (:typedef ("int")
                :type "typedef")
                nil [94 111])
            ("stStack" type
               (:members 
                  ( ("pStack" variable
                       (:pointer 1
                        :type ("DATA" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [140 153])
                    ("data" variable
                       (:pointer 1
                        :type ("DATA" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [156 167])
                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [170 182]))                  
                :type "struct")
                nil [113 199])
            ("HSTACK" type
               (:typedef ("stStack" type (:type "struct") nil nil)
                :pointer 1
                :type "typedef")
                nil [113 199])
            ("STACK" type
               (:typedef ("stStack" type (:type "struct") nil nil)
                :type "typedef")
                nil [113 199])
            ("CreateStack" function
               (:arguments 
                  ( ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [220 232]))                  
                :type ("HSTACK" type (:type "class") nil nil))
                nil [201 521])
            ("Push" function
               (:arguments 
                  ( ("hStack" variable (:type ("HSTACK" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [533 547])
                    ("data" variable (:type ("DATA" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [548 558]))                  
                :type ("BOOL" type (:type "class") nil nil))
                nil [523 664])
            ("Pop" function
               (:arguments 
                  ( ("hStack" variable (:type ("HSTACK" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [675 689]))                  
                :type ("DATA" type (:type "class") nil nil))
                nil [666 721])
            ("IsEmpty" function
               (:arguments 
                  ( ("hStack" variable (:type ("HSTACK" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [736 750]))                  
                :type ("BOOL" type (:type "class") nil nil))
                nil [723 810])
            ("CloseStack" function
               (:arguments 
                  ( ("hStack" variable (:type ("HSTACK" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [832 846]))                  
                :type "void")
                nil [816 890])
            ("main" function (:type "int") nil [892 1391]))          
      :file "main.c"
      :pointmax 1392
      :fsize 1391
      :lastmodtime '(23435 9702 685387 72000)
      :unmatched-syntax nil
      :lexical-table 
        '(("TRUE" . ((number "1" 55 . 56) (punctuation ";" 56 . 57)))
          ("FALSE" . ((number "0" 72 . 73) (punctuation ";" 73 . 74)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode makefile-gmake-mode
      :tags 
        '( ("PKG" variable (:default-value ("tutor14.out")) nil [1 17])
            ("DESTDIR" variable (:default-value ("bin/")) nil [18 33])
            ("CFLAGS" variable (:default-value ("-std=gnu99" "-Wall")) nil [34 58])
            ("$(PKG)" function (:arguments ("main.c")) nil [58 125])
            ("clean" function nil nil [125 183])
            ("install" function (:arguments ("$(PKG)")) nil [184 264]))          
      :file "Makefile"
      :pointmax 292
      :fsize 291
      :lastmodtime '(23435 1965 636336 372000)
      :unmatched-syntax nil))
  :file "!home!caglar!Documents!PROJECTS!C!CTutors!14!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
